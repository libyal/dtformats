# Run tox tests on Ubuntu Docker images using GIFT PPA
name: test_tox
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
permissions: read-all
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python-version: '3.9'
          toxenv: 'py39,wheel'
        - python-version: '3.10'
          toxenv: 'py310,wheel'
        - python-version: '3.11'
          toxenv: 'py311,wheel'
        - python-version: '3.12'
          toxenv: 'py312,wheel'
        - python-version: '3.13'
          toxenv: 'py313,wheel'
    container:
      image: ubuntu:22.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up container
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get update -q
        apt-get install -y libterm-readline-gnu-perl locales software-properties-common
        locale-gen en_US.UTF-8
        ln -f -s /usr/share/zoneinfo/UTC /etc/localtime
    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        add-apt-repository -y universe
        add-apt-repository -y ppa:deadsnakes/ppa
        add-apt-repository -y ppa:gift/dev
        apt-get update -q
        apt-get install -y build-essential git libsnappy-dev python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-venv libfwps-python3 libfwsi-python3 libgzipf-python3 liblnk-python3 libolecf-python3 libregf-python3 python3-dfdatetime python3-distutils python3-dtfabric python3-lib2to3 python3-lz4 python3-pip python3-setuptools python3-snappy python3-yaml python3-zstd
    - name: Install tox
      run: |
        python3 -m pip install tox
    - name: Run tests
      env:
        LANG: en_US.UTF-8
      run: |
        tox -e${{ matrix.toxenv }}
  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python-version: '3.10'
          toxenv: 'coverage'
    container:
      image: ubuntu:22.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up container
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get update -q
        apt-get install -y libterm-readline-gnu-perl locales software-properties-common
        locale-gen en_US.UTF-8
        ln -f -s /usr/share/zoneinfo/UTC /etc/localtime
    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        add-apt-repository -y universe
        add-apt-repository -y ppa:deadsnakes/ppa
        add-apt-repository -y ppa:gift/dev
        apt-get update -q
        apt-get install -y build-essential git libsnappy-dev python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-venv libfwps-python3 libfwsi-python3 libgzipf-python3 liblnk-python3 libolecf-python3 libregf-python3 python3-dfdatetime python3-distutils python3-dtfabric python3-lib2to3 python3-lz4 python3-pip python3-setuptools python3-snappy python3-yaml python3-zstd
    - name: Install tox
      run: |
        python3 -m pip install tox
    - name: Run tests with coverage
      env:
        LANG: en_US.UTF-8
      run: |
        tox -e${{ matrix.toxenv }}
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python-version: '3.12'
          toxenv: 'lint'
    container:
      image: ubuntu:22.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up container
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get update -q
        apt-get install -y libterm-readline-gnu-perl locales software-properties-common
        locale-gen en_US.UTF-8
        ln -f -s /usr/share/zoneinfo/UTC /etc/localtime
    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        add-apt-repository -y universe
        add-apt-repository -y ppa:deadsnakes/ppa
        add-apt-repository -y ppa:gift/dev
        apt-get update -q
        apt-get install -y build-essential git libsnappy-dev python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-venv libfwps-python3 libfwsi-python3 libgzipf-python3 liblnk-python3 libolecf-python3 libregf-python3 python3-dfdatetime python3-distutils python3-dtfabric python3-lib2to3 python3-lz4 python3-pip python3-setuptools python3-snappy python3-yaml python3-zstd
    - name: Install tox
      run: |
        python3 -m pip install tox
    - name: Run linter
      env:
        LANG: en_US.UTF-8
      run: |
        tox -e${{ matrix.toxenv }}
